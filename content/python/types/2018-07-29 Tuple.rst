Tuple
#####

:date: 2018-07-29 10:25
:modified: 2018-07-29 10:25
:tags: type
:category: python
:slug: tuple
:authors: Michael Cold
:summary: Разбираем особенности использования кортежей

Инициализация
=============

Особенностью инициализации переменных данного типа является необходимость разделителя в виде запятой.
Для инициализации нет необходимости использование скобок, хотя и общепринято

::

    >>> t = (1)
    >>> type(t)
    <class 'int'>
    >>> t = (1, )
    >>> type(t)
    <class 'tuple'>
    >>> t = 1,
    >>> type(t)
    <class 'tuple'>
    >>> t = 1, 2, 3
    >>> type(t)
    <class 'tuple'>

Изменяемость
============

Как известно, кортеж это неизменяемый тип. 
Вследствии этого, при попытке задать переменной, содержащей кортеж новое значение кортежа будет создан новый кортеж по другому адресу.

::

    >>> t = tuple()
    >>> id(t)
    2227475185736

    >>> t = t + (1,)
    >>> id(t)
    2227482836776

Зачем?
======

И вправду зачем? Зачем использовать кортеж, если есть список.
Аргументирую...

* меньший размер

::

    >>> t = tuple()
    >>> t.__sizeof__()
    24
    >>> l = list()
    >>> l.__sizeof__()
    40

* защита от дурака
* возможность использования кортежа в качестве ключа хеша

::

    >>> t = tuple()
    >>> d = dict()
    >>> d[t] = 1
    >>> d
    {(): 1}
    >>> l = list()
    >>> d[l] = 2
    Traceback (most recent call last):
    File "<stdin>", line 1, in <module>
    TypeError: unhashable type: 'list'