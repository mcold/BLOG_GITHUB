Компиляция в Python
###################

:date: 2018-07-28 11:00
:modified: 2018-07-28 11:00
:tags: compile
:category: python
:slug: pyc
:authors: Michael Cold
:summary: Определяем причины необходимости компиляции модулей


Что такое .pyc?
===============

Часто у непосвященных зрителей в Python возникает насущный вопрос: а что же такое файл .pyc, если Python, как известно, язык интерпретируемый?

Дело обстоит в том, что перед интерпретацией Python автоматически компилирует скрипт в скомпилированный код, так называемый байтовый код, перед его запуском. 
Но происходит это не всегда. Об этом далее ...

How is how собственно
=====================

Файл с расширением .py - это простой текстовый файл, в котором пишется код, .pyc в свою очередь это скомпилированный файл байт-кода, предназначенного для выполнения(интерпретации) в PVM (Python Virtual Machine).


Во время выполнения скрипта командой вида 

::

    python <script>.py

Запуск <script> не считается импортом и, как следствие, не будет создан pyc.
Если этот pyc-файл уже сгенерирован, то каждый раз, когда вы запускаете/выполняете свой py-файл, система напрямую загружает ваш pyc-файл, который не нуждается в компиляции (это сэкономит вам несколько машинных циклов процессора). После создания pyc-файла нет необходимости py-файла, если вы его не отредактируете.

Теоретически ваша программа может состоять только из исходного <script>.py и набора скомпилированных .pyc-файлов подключаемых модулей.

Обновление pyc
==============

Компиляция исходников происходит при помощи интерпретатора CPython.
CPython компилирует исходный код в "байтовый код" и по соображениям производительности кэширует этот байтовый код в файловой системе всякий раз, когда исходный файл имеет изменения. 
Это значительно ускоряет загрузку модулей Python, поскольку фазу компиляции можно обойти. Когда ваш исходный файл является foo.py, CPython кэширует байтовый код в файле foo.pyc рядом с исходным кодом.

В python3 механизм импорта Python расширяется для записи и поиска файлов кеш-кода в одном каталоге внутри каждого каталога пакетов Python. Этот каталог будет называться __pycache__.

После создания pyc-файла нет необходимости py-файла, если вы его не отредактируете.

Принудительная компиляция
=========================

Если вам нужно создать файл .pyc для не импортируемого модуля, вы можете использовать модули py_compile и compileall.

Модуль py_compile может вручную скомпилировать любой модуль. Один из способов - использовать функцию py_compile.compile в этом модуле в интерактивном режиме:
::

    >>> import py_compile
    >>> py_compile.compile('abc.py')

Данная последовательность инструкций создаст abc.pyc в том же месте, что и модуль abc.py.
Для переопределения файла компиляции можно использовать необязательный параметр cfile.